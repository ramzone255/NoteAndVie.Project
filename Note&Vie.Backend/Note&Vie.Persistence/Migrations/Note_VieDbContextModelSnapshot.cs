// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Note_Vie.Persistence.Data;

#nullable disable

namespace Note_Vie.Persistence.Migrations
{
    [DbContext(typeof(Note_VieDbContext))]
    partial class Note_VieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Note_Vie.Domain.Entities.Client", b =>
                {
                    b.Property<int>("id_client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_client"));

                    b.Property<string>("client_mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("id_client_type")
                        .HasColumnType("int");

                    b.HasKey("id_client");

                    b.HasIndex("id_client")
                        .IsUnique();

                    b.HasIndex("id_client_type");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Client_Type", b =>
                {
                    b.Property<int>("id_client_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_client_type"));

                    b.Property<string>("client_type_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("discount")
                        .HasColumnType("float");

                    b.HasKey("id_client_type");

                    b.HasIndex("id_client_type")
                        .IsUnique();

                    b.ToTable("Client_Type");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Employees", b =>
                {
                    b.Property<int>("id_employees")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_employees"));

                    b.Property<string>("employees_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("id_post")
                        .HasColumnType("int");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_employees");

                    b.HasIndex("id_employees")
                        .IsUnique();

                    b.HasIndex("id_post");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Post", b =>
                {
                    b.Property<int>("id_post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_post"));

                    b.Property<string>("post_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_post");

                    b.HasIndex("id_post")
                        .IsUnique();

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product", b =>
                {
                    b.Property<int>("id_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_product"));

                    b.Property<int>("id_product_status")
                        .HasColumnType("int");

                    b.Property<int>("id_product_type")
                        .HasColumnType("int");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("product_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("product_price")
                        .HasColumnType("float");

                    b.HasKey("id_product");

                    b.HasIndex("id_product")
                        .IsUnique();

                    b.HasIndex("id_product_status");

                    b.HasIndex("id_product_type");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product_Status", b =>
                {
                    b.Property<int>("id_product_status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_product_status"));

                    b.Property<string>("product_status_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_product_status");

                    b.HasIndex("id_product_status")
                        .IsUnique();

                    b.ToTable("Product_Status");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product_Type", b =>
                {
                    b.Property<int>("id_product_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_product_type"));

                    b.Property<string>("product_type_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_product_type");

                    b.HasIndex("id_product_type")
                        .IsUnique();

                    b.ToTable("Product_Type");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Receipt", b =>
                {
                    b.Property<int>("id_receipt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_receipt"));

                    b.Property<int>("id_client")
                        .HasColumnType("int");

                    b.Property<int>("id_employees")
                        .HasColumnType("int");

                    b.Property<int>("id_product")
                        .HasColumnType("int");

                    b.HasKey("id_receipt");

                    b.HasIndex("id_client");

                    b.HasIndex("id_employees");

                    b.HasIndex("id_product");

                    b.HasIndex("id_receipt")
                        .IsUnique();

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Client", b =>
                {
                    b.HasOne("Note_Vie.Domain.Entities.Client_Type", "Client_Type")
                        .WithMany("Client")
                        .HasForeignKey("id_client_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client_Type");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Employees", b =>
                {
                    b.HasOne("Note_Vie.Domain.Entities.Post", "Post")
                        .WithMany("Employees")
                        .HasForeignKey("id_post")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product", b =>
                {
                    b.HasOne("Note_Vie.Domain.Entities.Product_Status", "Product_Status")
                        .WithMany("Product")
                        .HasForeignKey("id_product_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Note_Vie.Domain.Entities.Product_Type", "Product_Type")
                        .WithMany("Product")
                        .HasForeignKey("id_product_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Status");

                    b.Navigation("Product_Type");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Receipt", b =>
                {
                    b.HasOne("Note_Vie.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("id_client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Note_Vie.Domain.Entities.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("id_employees")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Note_Vie.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employees");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Client_Type", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Post", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product_Status", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Note_Vie.Domain.Entities.Product_Type", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
